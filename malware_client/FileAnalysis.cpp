#include "FileAnalysis.hpp"

using namespace std;


void FileRead(int idx, string& filename)
{
    WIN32_FIND_DATAA data;
    HANDLE hFind = nullptr;

    vector<string> folders;
    vector<string> files;

    switch (idx) {
    case 0:
        cout << " ********** Downloads ********** " << endl;
        hFind = FindFirstFileA(filename.c_str(), &data);
        break;
    case 1:
        cout << endl;
        cout << " ********** Documents ********** " << endl;
        hFind = FindFirstFileA(filename.c_str(), &data);
        break;
    case 2:
        cout << endl;
        cout << " ********** Desktop ********** " << endl;
        hFind = FindFirstFileA(filename.c_str(), &data);
        break;
    case 3:
        cout << endl;
        cout << " ********** ../Temp ********** " << endl;
        hFind = FindFirstFileA(filename.c_str(), &data);
        break;
    }

    if (hFind == INVALID_HANDLE_VALUE)
    {
        return;
    }

    do {
        if (data.dwFileAttributes & FILE_ATTRIBUTE_DIRECTORY)
        {
            folders.push_back(data.cFileName);
        }
        else
        {
            files.push_back(data.cFileName);
        }
    } while (FindNextFileA(hFind, &data) != 0);

    FindClose(hFind);

    // 폴더 출력
    for (const string& folder : folders)
    {
        cout << "[Folder] " << folder << endl;
    }

    // 파일 출력
    for (const string& file : files)
    {
        cout << "[File] " << file << endl;
    }
}